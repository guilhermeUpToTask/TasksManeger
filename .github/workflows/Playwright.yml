name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: "false"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DOCKER_IMAGE_BACKEND: ${{ vars.DOCKER_IMAGE_BACKEND }}
      DOCKER_IMAGE_NGINX: ${{ vars.DOCKER_IMAGE_NGINX }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      VITE_API_URL: "http://localhost:8000"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Playwright image with caching
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --pull \
            -t tasksmaneger_playwright-dev \
            -f frontend/Dockerfile.playwright \
            ./frontend --load
          rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build and start Docker Compose services
        run: docker compose up -d --build

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for Postgres to be ready..."
          for i in {1..12}; do
            if docker compose ps | grep "healthy"; then
              echo "Services are healthy."
              exit 0
            fi
            echo "Still waiting..."
            sleep 5
          done
          echo "Timeout waiting for services." && exit 1

      - name: Run Playwright E2E tests
        run: |
          docker compose run --rm playwright npx playwright test --fail-on-flaky-tests --trace=retain-on-failure

      - name: Tear down services
        run: docker compose down
